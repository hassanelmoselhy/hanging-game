{"ast":null,"code":"// src/redux/actions.js\n\n// Action Types\nexport const FETCH_WORDS_REQUEST = 'FETCH_WORDS_REQUEST';\nexport const FETCH_WORDS_SUCCESS = 'FETCH_WORDS_SUCCESS';\nexport const FETCH_WORDS_FAILURE = 'FETCH_WORDS_FAILURE';\nexport const GUESS_LETTER = 'GUESS_LETTER';\nexport const RESET_GAME = 'RESET_GAME';\nexport const SET_NEXT_WORD = 'SET_NEXT_WORD';\n\n// Action Creators\nexport const fetchWordsRequest = () => ({\n  type: FETCH_WORDS_REQUEST\n});\nexport const fetchWordsSuccess = words => ({\n  type: FETCH_WORDS_SUCCESS,\n  payload: words\n});\nexport const fetchWordsFailure = error => ({\n  type: FETCH_WORDS_FAILURE,\n  payload: error\n});\nexport const guessLetter = letter => ({\n  type: GUESS_LETTER,\n  payload: letter\n});\nexport const resetGame = () => ({\n  type: RESET_GAME\n});\nexport const setNextWord = word => ({\n  type: SET_NEXT_WORD,\n  payload: word\n});","map":{"version":3,"names":["FETCH_WORDS_REQUEST","FETCH_WORDS_SUCCESS","FETCH_WORDS_FAILURE","GUESS_LETTER","RESET_GAME","SET_NEXT_WORD","fetchWordsRequest","type","fetchWordsSuccess","words","payload","fetchWordsFailure","error","guessLetter","letter","resetGame","setNextWord","word"],"sources":["C:/Users/hassa/Desktop/react/hangman-game/src/redux/actions.js"],"sourcesContent":["// src/redux/actions.js\r\n\r\n// Action Types\r\nexport const FETCH_WORDS_REQUEST = 'FETCH_WORDS_REQUEST';\r\nexport const FETCH_WORDS_SUCCESS = 'FETCH_WORDS_SUCCESS';\r\nexport const FETCH_WORDS_FAILURE = 'FETCH_WORDS_FAILURE';\r\nexport const GUESS_LETTER = 'GUESS_LETTER';\r\nexport const RESET_GAME = 'RESET_GAME';\r\nexport const SET_NEXT_WORD = 'SET_NEXT_WORD';\r\n\r\n// Action Creators\r\nexport const fetchWordsRequest = () => ({\r\n  type: FETCH_WORDS_REQUEST,\r\n});\r\n\r\nexport const fetchWordsSuccess = (words) => ({\r\n  type: FETCH_WORDS_SUCCESS,\r\n  payload: words,\r\n});\r\n\r\nexport const fetchWordsFailure = (error) => ({\r\n  type: FETCH_WORDS_FAILURE,\r\n  payload: error,\r\n});\r\n\r\nexport const guessLetter = (letter) => ({\r\n  type: GUESS_LETTER,\r\n  payload: letter,\r\n});\r\n\r\nexport const resetGame = () => ({\r\n  type: RESET_GAME,\r\n});\r\n\r\nexport const setNextWord = (word) => ({\r\n  type: SET_NEXT_WORD,\r\n  payload: word,\r\n});\r\n"],"mappings":"AAAA;;AAEA;AACA,OAAO,MAAMA,mBAAmB,GAAG,qBAAqB;AACxD,OAAO,MAAMC,mBAAmB,GAAG,qBAAqB;AACxD,OAAO,MAAMC,mBAAmB,GAAG,qBAAqB;AACxD,OAAO,MAAMC,YAAY,GAAG,cAAc;AAC1C,OAAO,MAAMC,UAAU,GAAG,YAAY;AACtC,OAAO,MAAMC,aAAa,GAAG,eAAe;;AAE5C;AACA,OAAO,MAAMC,iBAAiB,GAAGA,CAAA,MAAO;EACtCC,IAAI,EAAEP;AACR,CAAC,CAAC;AAEF,OAAO,MAAMQ,iBAAiB,GAAIC,KAAK,KAAM;EAC3CF,IAAI,EAAEN,mBAAmB;EACzBS,OAAO,EAAED;AACX,CAAC,CAAC;AAEF,OAAO,MAAME,iBAAiB,GAAIC,KAAK,KAAM;EAC3CL,IAAI,EAAEL,mBAAmB;EACzBQ,OAAO,EAAEE;AACX,CAAC,CAAC;AAEF,OAAO,MAAMC,WAAW,GAAIC,MAAM,KAAM;EACtCP,IAAI,EAAEJ,YAAY;EAClBO,OAAO,EAAEI;AACX,CAAC,CAAC;AAEF,OAAO,MAAMC,SAAS,GAAGA,CAAA,MAAO;EAC9BR,IAAI,EAAEH;AACR,CAAC,CAAC;AAEF,OAAO,MAAMY,WAAW,GAAIC,IAAI,KAAM;EACpCV,IAAI,EAAEF,aAAa;EACnBK,OAAO,EAAEO;AACX,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}