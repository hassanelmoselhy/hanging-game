{"ast":null,"code":"// src/redux/actions.js\nimport axios from 'axios';\n\n// Action Types\nexport const GUESS_LETTER = 'GUESS_LETTER';\nexport const RESET_GAME = 'RESET_GAME';\nexport const SET_NEXT_WORD = 'SET_NEXT_WORD';\nexport const FETCH_WORDS_REQUEST = 'FETCH_WORDS_REQUEST';\nexport const FETCH_WORDS_SUCCESS = 'FETCH_WORDS_SUCCESS';\nexport const FETCH_WORDS_FAILURE = 'FETCH_WORDS_FAILURE';\n\n// Action Creators\nexport const guessLetter = letter => ({\n  type: GUESS_LETTER,\n  payload: letter\n});\nexport const resetGame = () => ({\n  type: RESET_GAME\n});\nexport const fetchWords = () => async dispatch => {\n  dispatch({\n    type: FETCH_WORDS_REQUEST\n  });\n  try {\n    // Replace with the URL of the API you are using\n    const response = await axios.get('https://api.example.com/words');\n    dispatch({\n      type: FETCH_WORDS_SUCCESS,\n      payload: response.data.words\n    });\n  } catch (error) {\n    dispatch({\n      type: FETCH_WORDS_FAILURE,\n      payload: error.message\n    });\n  }\n};\nexport const setNextWord = () => ({\n  type: SET_NEXT_WORD\n});","map":{"version":3,"names":["axios","GUESS_LETTER","RESET_GAME","SET_NEXT_WORD","FETCH_WORDS_REQUEST","FETCH_WORDS_SUCCESS","FETCH_WORDS_FAILURE","guessLetter","letter","type","payload","resetGame","fetchWords","dispatch","response","get","data","words","error","message","setNextWord"],"sources":["C:/Users/hassa/Desktop/react/hangman-game/src/redux/actions.js"],"sourcesContent":["// src/redux/actions.js\r\nimport axios from 'axios';\r\n\r\n// Action Types\r\nexport const GUESS_LETTER = 'GUESS_LETTER';\r\nexport const RESET_GAME = 'RESET_GAME';\r\nexport const SET_NEXT_WORD = 'SET_NEXT_WORD';\r\nexport const FETCH_WORDS_REQUEST = 'FETCH_WORDS_REQUEST';\r\nexport const FETCH_WORDS_SUCCESS = 'FETCH_WORDS_SUCCESS';\r\nexport const FETCH_WORDS_FAILURE = 'FETCH_WORDS_FAILURE';\r\n\r\n// Action Creators\r\nexport const guessLetter = (letter) => ({\r\n  type: GUESS_LETTER,\r\n  payload: letter,\r\n});\r\n\r\nexport const resetGame = () => ({\r\n  type: RESET_GAME,\r\n});\r\n\r\nexport const fetchWords = () => async (dispatch) => {\r\n  dispatch({ type: FETCH_WORDS_REQUEST });\r\n  try {\r\n    // Replace with the URL of the API you are using\r\n    const response = await axios.get('https://api.example.com/words');\r\n    dispatch({ type: FETCH_WORDS_SUCCESS, payload: response.data.words });\r\n  } catch (error) {\r\n    dispatch({ type: FETCH_WORDS_FAILURE, payload: error.message });\r\n  }\r\n};\r\n\r\nexport const setNextWord = () => ({\r\n  type: SET_NEXT_WORD,\r\n});\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,OAAO,MAAMC,YAAY,GAAG,cAAc;AAC1C,OAAO,MAAMC,UAAU,GAAG,YAAY;AACtC,OAAO,MAAMC,aAAa,GAAG,eAAe;AAC5C,OAAO,MAAMC,mBAAmB,GAAG,qBAAqB;AACxD,OAAO,MAAMC,mBAAmB,GAAG,qBAAqB;AACxD,OAAO,MAAMC,mBAAmB,GAAG,qBAAqB;;AAExD;AACA,OAAO,MAAMC,WAAW,GAAIC,MAAM,KAAM;EACtCC,IAAI,EAAER,YAAY;EAClBS,OAAO,EAAEF;AACX,CAAC,CAAC;AAEF,OAAO,MAAMG,SAAS,GAAGA,CAAA,MAAO;EAC9BF,IAAI,EAAEP;AACR,CAAC,CAAC;AAEF,OAAO,MAAMU,UAAU,GAAGA,CAAA,KAAM,MAAOC,QAAQ,IAAK;EAClDA,QAAQ,CAAC;IAAEJ,IAAI,EAAEL;EAAoB,CAAC,CAAC;EACvC,IAAI;IACF;IACA,MAAMU,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,+BAA+B,CAAC;IACjEF,QAAQ,CAAC;MAAEJ,IAAI,EAAEJ,mBAAmB;MAAEK,OAAO,EAAEI,QAAQ,CAACE,IAAI,CAACC;IAAM,CAAC,CAAC;EACvE,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdL,QAAQ,CAAC;MAAEJ,IAAI,EAAEH,mBAAmB;MAAEI,OAAO,EAAEQ,KAAK,CAACC;IAAQ,CAAC,CAAC;EACjE;AACF,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGA,CAAA,MAAO;EAChCX,IAAI,EAAEN;AACR,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}