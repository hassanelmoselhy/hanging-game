{"ast":null,"code":"// src/redux/reducers.js\nimport { GUESS_LETTER, RESET_GAME, SET_NEXT_WORD } from './actions';\nconst wordsList = ['REACT', 'JAVASCRIPT', 'REDUX', 'FRAMER', 'MOTION', 'game', 'play', 'football', 'basketball'];\nconst initialState = {\n  word: wordsList[0],\n  guessedLetters: [],\n  incorrectGuesses: 0,\n  maxGuesses: 6,\n  words: wordsList,\n  currentWordIndex: 0\n};\nconst hangmanReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GUESS_LETTER:\n      const letter = action.payload;\n      const isCorrect = state.word.includes(letter);\n      const guessedLetters = [...state.guessedLetters, letter];\n      const incorrectGuesses = isCorrect ? state.incorrectGuesses : state.incorrectGuesses + 1;\n      const isWordComplete = state.word.split('').every(l => guessedLetters.includes(l));\n      return {\n        ...state,\n        guessedLetters,\n        incorrectGuesses,\n        ...(isWordComplete && {\n          word: state.words[(state.currentWordIndex + 1) % state.words.length],\n          guessedLetters: [],\n          incorrectGuesses: 0,\n          currentWordIndex: (state.currentWordIndex + 1) % state.words.length\n        })\n      };\n    case SET_NEXT_WORD:\n      return {\n        ...state,\n        word: state.words[(state.currentWordIndex + 1) % state.words.length],\n        guessedLetters: [],\n        incorrectGuesses: 0,\n        currentWordIndex: (state.currentWordIndex + 1) % state.words.length\n      };\n    case RESET_GAME:\n      return initialState;\n    default:\n      return state;\n  }\n};\nexport default hangmanReducer;","map":{"version":3,"names":["GUESS_LETTER","RESET_GAME","SET_NEXT_WORD","wordsList","initialState","word","guessedLetters","incorrectGuesses","maxGuesses","words","currentWordIndex","hangmanReducer","state","action","type","letter","payload","isCorrect","includes","isWordComplete","split","every","l","length"],"sources":["C:/Users/hassa/Desktop/hassan/hangman-game/src/redux/reducers.js"],"sourcesContent":["// src/redux/reducers.js\r\nimport { GUESS_LETTER, RESET_GAME, SET_NEXT_WORD } from './actions';\r\n\r\nconst wordsList = ['REACT', 'JAVASCRIPT', 'REDUX', 'FRAMER', 'MOTION' , 'game'  , 'play'  , 'football' , 'basketball'];\r\n\r\nconst initialState = {\r\n  word: wordsList[0],\r\n  guessedLetters: [],\r\n  incorrectGuesses: 0,\r\n  maxGuesses: 6,\r\n  words: wordsList,\r\n  currentWordIndex: 0,\r\n};\r\n\r\nconst hangmanReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GUESS_LETTER:\r\n      const letter = action.payload;\r\n      const isCorrect = state.word.includes(letter);\r\n      const guessedLetters = [...state.guessedLetters, letter];\r\n      const incorrectGuesses = isCorrect\r\n        ? state.incorrectGuesses\r\n        : state.incorrectGuesses + 1;\r\n      const isWordComplete = state.word.split('').every(l => guessedLetters.includes(l));\r\n      return {\r\n        ...state,\r\n        guessedLetters,\r\n        incorrectGuesses,\r\n        ...(isWordComplete && {\r\n          word: state.words[(state.currentWordIndex + 1) % state.words.length],\r\n          guessedLetters: [],\r\n          incorrectGuesses: 0,\r\n          currentWordIndex: (state.currentWordIndex + 1) % state.words.length,\r\n        }),\r\n      };\r\n    case SET_NEXT_WORD:\r\n      return {\r\n        ...state,\r\n        word: state.words[(state.currentWordIndex + 1) % state.words.length],\r\n        guessedLetters: [],\r\n        incorrectGuesses: 0,\r\n        currentWordIndex: (state.currentWordIndex + 1) % state.words.length,\r\n      };\r\n    case RESET_GAME:\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default hangmanReducer;\r\n"],"mappings":"AAAA;AACA,SAASA,YAAY,EAAEC,UAAU,EAAEC,aAAa,QAAQ,WAAW;AAEnE,MAAMC,SAAS,GAAG,CAAC,OAAO,EAAE,YAAY,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAG,MAAM,EAAI,MAAM,EAAI,UAAU,EAAG,YAAY,CAAC;AAEtH,MAAMC,YAAY,GAAG;EACnBC,IAAI,EAAEF,SAAS,CAAC,CAAC,CAAC;EAClBG,cAAc,EAAE,EAAE;EAClBC,gBAAgB,EAAE,CAAC;EACnBC,UAAU,EAAE,CAAC;EACbC,KAAK,EAAEN,SAAS;EAChBO,gBAAgB,EAAE;AACpB,CAAC;AAED,MAAMC,cAAc,GAAGA,CAACC,KAAK,GAAGR,YAAY,EAAES,MAAM,KAAK;EACvD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKd,YAAY;MACf,MAAMe,MAAM,GAAGF,MAAM,CAACG,OAAO;MAC7B,MAAMC,SAAS,GAAGL,KAAK,CAACP,IAAI,CAACa,QAAQ,CAACH,MAAM,CAAC;MAC7C,MAAMT,cAAc,GAAG,CAAC,GAAGM,KAAK,CAACN,cAAc,EAAES,MAAM,CAAC;MACxD,MAAMR,gBAAgB,GAAGU,SAAS,GAC9BL,KAAK,CAACL,gBAAgB,GACtBK,KAAK,CAACL,gBAAgB,GAAG,CAAC;MAC9B,MAAMY,cAAc,GAAGP,KAAK,CAACP,IAAI,CAACe,KAAK,CAAC,EAAE,CAAC,CAACC,KAAK,CAACC,CAAC,IAAIhB,cAAc,CAACY,QAAQ,CAACI,CAAC,CAAC,CAAC;MAClF,OAAO;QACL,GAAGV,KAAK;QACRN,cAAc;QACdC,gBAAgB;QAChB,IAAIY,cAAc,IAAI;UACpBd,IAAI,EAAEO,KAAK,CAACH,KAAK,CAAC,CAACG,KAAK,CAACF,gBAAgB,GAAG,CAAC,IAAIE,KAAK,CAACH,KAAK,CAACc,MAAM,CAAC;UACpEjB,cAAc,EAAE,EAAE;UAClBC,gBAAgB,EAAE,CAAC;UACnBG,gBAAgB,EAAE,CAACE,KAAK,CAACF,gBAAgB,GAAG,CAAC,IAAIE,KAAK,CAACH,KAAK,CAACc;QAC/D,CAAC;MACH,CAAC;IACH,KAAKrB,aAAa;MAChB,OAAO;QACL,GAAGU,KAAK;QACRP,IAAI,EAAEO,KAAK,CAACH,KAAK,CAAC,CAACG,KAAK,CAACF,gBAAgB,GAAG,CAAC,IAAIE,KAAK,CAACH,KAAK,CAACc,MAAM,CAAC;QACpEjB,cAAc,EAAE,EAAE;QAClBC,gBAAgB,EAAE,CAAC;QACnBG,gBAAgB,EAAE,CAACE,KAAK,CAACF,gBAAgB,GAAG,CAAC,IAAIE,KAAK,CAACH,KAAK,CAACc;MAC/D,CAAC;IACH,KAAKtB,UAAU;MACb,OAAOG,YAAY;IACrB;MACE,OAAOQ,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}