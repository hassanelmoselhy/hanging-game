{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hassa\\\\Desktop\\\\react\\\\hangman-game\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { guessLetter, resetGame } from './redux/actions';\nimport { motion } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const {\n    word,\n    guessedLetters,\n    incorrectGuesses,\n    maxGuesses\n  } = useSelector(state => state);\n  const dispatch = useDispatch();\n  const handleGuess = letter => {\n    dispatch(guessLetter(letter));\n  };\n  const handleReset = () => {\n    dispatch(resetGame());\n  };\n  const displayWord = word.split('').map(letter => guessedLetters.includes(letter) ? letter : '_').join(' ');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hangman Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n      initial: {\n        opacity: 0\n      },\n      animate: {\n        opacity: 1\n      },\n      transition: {\n        duration: 0.5\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Word: \", displayWord]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Incorrect Guesses: \", incorrectGuesses, \"/\", maxGuesses]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [incorrectGuesses >= maxGuesses ? /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Game Over\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 45\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          maxLength: \"1\",\n          onChange: e => handleGuess(e.target.value.toUpperCase())\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleReset,\n          children: \"Reset Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"1Uy3mzC3Lcx8ikFWhMk40n+Xeps=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useSelector","useDispatch","guessLetter","resetGame","motion","jsxDEV","_jsxDEV","App","_s","word","guessedLetters","incorrectGuesses","maxGuesses","state","dispatch","handleGuess","letter","handleReset","displayWord","split","map","includes","join","className","children","fileName","_jsxFileName","lineNumber","columnNumber","div","initial","opacity","animate","transition","duration","type","maxLength","onChange","e","target","value","toUpperCase","onClick","_c","$RefreshReg$"],"sources":["C:/Users/hassa/Desktop/react/hangman-game/src/App.js"],"sourcesContent":["// src/App.js\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { guessLetter, resetGame } from './redux/actions';\nimport { motion } from 'framer-motion';\n\nconst App = () => {\n  const { word, guessedLetters, incorrectGuesses, maxGuesses } = useSelector((state) => state);\n  const dispatch = useDispatch();\n\n  const handleGuess = (letter) => {\n    dispatch(guessLetter(letter));\n  };\n\n  const handleReset = () => {\n    dispatch(resetGame());\n  };\n\n  const displayWord = word\n    .split('')\n    .map((letter) => (guessedLetters.includes(letter) ? letter : '_'))\n    .join(' ');\n\n  return (\n    <div className=\"App\">\n      <h1>Hangman Game</h1>\n      <motion.div\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        transition={{ duration: 0.5 }}\n      >\n        <h2>Word: {displayWord}</h2>\n        <p>Incorrect Guesses: {incorrectGuesses}/{maxGuesses}</p>\n        <div>\n          {incorrectGuesses >= maxGuesses ? <h2>Game Over</h2> : null}\n          <input type=\"text\" maxLength=\"1\" onChange={(e) => handleGuess(e.target.value.toUpperCase())} />\n          <button onClick={handleReset}>Reset Game</button>\n        </div>\n      </motion.div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,WAAW,EAAEC,SAAS,QAAQ,iBAAiB;AACxD,SAASC,MAAM,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM;IAAEC,IAAI;IAAEC,cAAc;IAAEC,gBAAgB;IAAEC;EAAW,CAAC,GAAGZ,WAAW,CAAEa,KAAK,IAAKA,KAAK,CAAC;EAC5F,MAAMC,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAE9B,MAAMc,WAAW,GAAIC,MAAM,IAAK;IAC9BF,QAAQ,CAACZ,WAAW,CAACc,MAAM,CAAC,CAAC;EAC/B,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBH,QAAQ,CAACX,SAAS,CAAC,CAAC,CAAC;EACvB,CAAC;EAED,MAAMe,WAAW,GAAGT,IAAI,CACrBU,KAAK,CAAC,EAAE,CAAC,CACTC,GAAG,CAAEJ,MAAM,IAAMN,cAAc,CAACW,QAAQ,CAACL,MAAM,CAAC,GAAGA,MAAM,GAAG,GAAI,CAAC,CACjEM,IAAI,CAAC,GAAG,CAAC;EAEZ,oBACEhB,OAAA;IAAKiB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBlB,OAAA;MAAAkB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBtB,OAAA,CAACF,MAAM,CAACyB,GAAG;MACTC,OAAO,EAAE;QAAEC,OAAO,EAAE;MAAE,CAAE;MACxBC,OAAO,EAAE;QAAED,OAAO,EAAE;MAAE,CAAE;MACxBE,UAAU,EAAE;QAAEC,QAAQ,EAAE;MAAI,CAAE;MAAAV,QAAA,gBAE9BlB,OAAA;QAAAkB,QAAA,GAAI,QAAM,EAACN,WAAW;MAAA;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC5BtB,OAAA;QAAAkB,QAAA,GAAG,qBAAmB,EAACb,gBAAgB,EAAC,GAAC,EAACC,UAAU;MAAA;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzDtB,OAAA;QAAAkB,QAAA,GACGb,gBAAgB,IAAIC,UAAU,gBAAGN,OAAA;UAAAkB,QAAA,EAAI;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,GAAG,IAAI,eAC3DtB,OAAA;UAAO6B,IAAI,EAAC,MAAM;UAACC,SAAS,EAAC,GAAG;UAACC,QAAQ,EAAGC,CAAC,IAAKvB,WAAW,CAACuB,CAAC,CAACC,MAAM,CAACC,KAAK,CAACC,WAAW,CAAC,CAAC;QAAE;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC/FtB,OAAA;UAAQoC,OAAO,EAAEzB,WAAY;UAAAO,QAAA,EAAC;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEV,CAAC;AAACpB,EAAA,CAnCID,GAAG;EAAA,QACwDP,WAAW,EACzDC,WAAW;AAAA;AAAA0C,EAAA,GAFxBpC,GAAG;AAqCT,eAAeA,GAAG;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}